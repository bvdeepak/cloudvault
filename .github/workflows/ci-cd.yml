name: CloudVault CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  backend:
    name: Backend - build & test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cloudvault-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        run: npm ci

      - name: Lint backend (if present)
        run: npm run lint --if-present

      - name: Run backend tests (if present)
        run: npm test --if-present

  frontend:
    name: Frontend - build & test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cloudvault-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

  deploy:
    name: Deploy (Render backend + Vercel frontend)
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Render deploy (backend)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          echo "Triggering Render deploy for service $RENDER_SERVICE_ID ..."
          # POST to Render deploy endpoint (will trigger a deploy of the latest commit on service's connected branch)
          curl --fail -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}'
          echo "Render deploy triggered."

      - name: Deploy frontend to Vercel
        uses: amondnet/vercel-action@v41
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod"
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: cloudvault-frontend
